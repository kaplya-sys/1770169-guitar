
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports various common sort, input & filter types that are not directly linked to a particular model.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums"
import type * as Prisma from "./internal/prismaNamespace"


export type StringFilter<$PrismaModel = never> = {
  equals?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  contains?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  startsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  endsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  mode?: Prisma.QueryMode | runtime.Types.Skip
  not?: Prisma.NestedStringFilter<$PrismaModel> | string | runtime.Types.Skip
}

export type DateTimeFilter<$PrismaModel = never> = {
  equals?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedDateTimeFilter<$PrismaModel> | Date | string | runtime.Types.Skip
}

export type EnumGuitarTypeFilter<$PrismaModel = never> = {
  equals?: $Enums.GuitarType | Prisma.EnumGuitarTypeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.GuitarType[] | Prisma.ListEnumGuitarTypeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.GuitarType[] | Prisma.ListEnumGuitarTypeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumGuitarTypeFilter<$PrismaModel> | $Enums.GuitarType | runtime.Types.Skip
}

export type EnumGuitarStringsFilter<$PrismaModel = never> = {
  equals?: $Enums.GuitarStrings | Prisma.EnumGuitarStringsFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.GuitarStrings[] | Prisma.ListEnumGuitarStringsFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.GuitarStrings[] | Prisma.ListEnumGuitarStringsFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumGuitarStringsFilter<$PrismaModel> | $Enums.GuitarStrings | runtime.Types.Skip
}

export type IntFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntFilter<$PrismaModel> | number | runtime.Types.Skip
}

export type StringWithAggregatesFilter<$PrismaModel = never> = {
  equals?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  contains?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  startsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  endsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  mode?: Prisma.QueryMode | runtime.Types.Skip
  not?: Prisma.NestedStringWithAggregatesFilter<$PrismaModel> | string | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedStringFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedStringFilter<$PrismaModel> | runtime.Types.Skip
}

export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
  equals?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedDateTimeFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedDateTimeFilter<$PrismaModel> | runtime.Types.Skip
}

export type EnumGuitarTypeWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.GuitarType | Prisma.EnumGuitarTypeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.GuitarType[] | Prisma.ListEnumGuitarTypeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.GuitarType[] | Prisma.ListEnumGuitarTypeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumGuitarTypeWithAggregatesFilter<$PrismaModel> | $Enums.GuitarType | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumGuitarTypeFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumGuitarTypeFilter<$PrismaModel> | runtime.Types.Skip
}

export type EnumGuitarStringsWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.GuitarStrings | Prisma.EnumGuitarStringsFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.GuitarStrings[] | Prisma.ListEnumGuitarStringsFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.GuitarStrings[] | Prisma.ListEnumGuitarStringsFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumGuitarStringsWithAggregatesFilter<$PrismaModel> | $Enums.GuitarStrings | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumGuitarStringsFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumGuitarStringsFilter<$PrismaModel> | runtime.Types.Skip
}

export type IntWithAggregatesFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntWithAggregatesFilter<$PrismaModel> | number | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _avg?: Prisma.NestedFloatFilter<$PrismaModel> | runtime.Types.Skip
  _sum?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
}

export type EnumRoleNullableFilter<$PrismaModel = never> = {
  equals?: $Enums.Role | Prisma.EnumRoleFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  not?: Prisma.NestedEnumRoleNullableFilter<$PrismaModel> | $Enums.Role | null | runtime.Types.Skip
}

export type SortOrderInput = {
  sort: Prisma.SortOrder
  nulls?: Prisma.NullsOrder | runtime.Types.Skip
}

export type EnumRoleNullableWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.Role | Prisma.EnumRoleFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  not?: Prisma.NestedEnumRoleNullableWithAggregatesFilter<$PrismaModel> | $Enums.Role | null | runtime.Types.Skip
  _count?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumRoleNullableFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumRoleNullableFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedStringFilter<$PrismaModel = never> = {
  equals?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  contains?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  startsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  endsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedStringFilter<$PrismaModel> | string | runtime.Types.Skip
}

export type NestedDateTimeFilter<$PrismaModel = never> = {
  equals?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedDateTimeFilter<$PrismaModel> | Date | string | runtime.Types.Skip
}

export type NestedEnumGuitarTypeFilter<$PrismaModel = never> = {
  equals?: $Enums.GuitarType | Prisma.EnumGuitarTypeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.GuitarType[] | Prisma.ListEnumGuitarTypeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.GuitarType[] | Prisma.ListEnumGuitarTypeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumGuitarTypeFilter<$PrismaModel> | $Enums.GuitarType | runtime.Types.Skip
}

export type NestedEnumGuitarStringsFilter<$PrismaModel = never> = {
  equals?: $Enums.GuitarStrings | Prisma.EnumGuitarStringsFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.GuitarStrings[] | Prisma.ListEnumGuitarStringsFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.GuitarStrings[] | Prisma.ListEnumGuitarStringsFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumGuitarStringsFilter<$PrismaModel> | $Enums.GuitarStrings | runtime.Types.Skip
}

export type NestedIntFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntFilter<$PrismaModel> | number | runtime.Types.Skip
}

export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
  equals?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  contains?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  startsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  endsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedStringWithAggregatesFilter<$PrismaModel> | string | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedStringFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedStringFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
  equals?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedDateTimeFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedDateTimeFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedEnumGuitarTypeWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.GuitarType | Prisma.EnumGuitarTypeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.GuitarType[] | Prisma.ListEnumGuitarTypeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.GuitarType[] | Prisma.ListEnumGuitarTypeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumGuitarTypeWithAggregatesFilter<$PrismaModel> | $Enums.GuitarType | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumGuitarTypeFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumGuitarTypeFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedEnumGuitarStringsWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.GuitarStrings | Prisma.EnumGuitarStringsFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.GuitarStrings[] | Prisma.ListEnumGuitarStringsFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.GuitarStrings[] | Prisma.ListEnumGuitarStringsFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumGuitarStringsWithAggregatesFilter<$PrismaModel> | $Enums.GuitarStrings | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumGuitarStringsFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumGuitarStringsFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntWithAggregatesFilter<$PrismaModel> | number | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _avg?: Prisma.NestedFloatFilter<$PrismaModel> | runtime.Types.Skip
  _sum?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedFloatFilter<$PrismaModel = never> = {
  equals?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: number[] | Prisma.ListFloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: number[] | Prisma.ListFloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedFloatFilter<$PrismaModel> | number | runtime.Types.Skip
}

export type NestedEnumRoleNullableFilter<$PrismaModel = never> = {
  equals?: $Enums.Role | Prisma.EnumRoleFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  not?: Prisma.NestedEnumRoleNullableFilter<$PrismaModel> | $Enums.Role | null | runtime.Types.Skip
}

export type NestedEnumRoleNullableWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.Role | Prisma.EnumRoleFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  not?: Prisma.NestedEnumRoleNullableWithAggregatesFilter<$PrismaModel> | $Enums.Role | null | runtime.Types.Skip
  _count?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumRoleNullableFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumRoleNullableFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedIntNullableFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntNullableFilter<$PrismaModel> | number | null | runtime.Types.Skip
}


